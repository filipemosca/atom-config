# Wrap selected text with other text.
atom.commands.add 'atom-text-editor', 'user:wrap-selection-red', -> # Defines a command to work within the TextEditor.
  return unless editor = atom.workspace.getActiveTextEditor() # Get the active editor object and also return immediately if something goes wrong and there's no active text editor.

  selection = editor.getLastSelection() # Get the most recent selection.
  text = selection.getText() # A selection is an object with a bunch of information attached, so we need to get the text from it.
  prefix = '<span style="color:red">'
  suffix = "</span>"

  # This block makes sure that there are spaces between the prefix, suffix, and content. In the case of the example tag, this is necessary.
  # if text[0] != " "
  #    prefix = prefix + " "
  # if text[text.length - 1] != " "
  #  suffix = " " + suffix

  # insertText() replaces the whole selection. The options argument makes sure that the resulting text is selected.
  selection.insertText(prefix + selection.getText() + suffix, {select: true})


# Wrap selected text with other text.
atom.commands.add 'atom-text-editor', 'user:wrap-selection-orange', -> # Defines a command to work within the TextEditor.
  return unless editor = atom.workspace.getActiveTextEditor() # Get the active editor object and also return immediately if something goes wrong and there's no active text editor.

  selection = editor.getLastSelection() # Get the most recent selection.
  text = selection.getText() # A selection is an object with a bunch of information attached, so we need to get the text from it.
  prefix = '<span style="color:orange">'
  suffix = "</span>"

  # insertText() replaces the whole selection. The options argument makes sure that the resulting text is selected.
  selection.insertText(prefix + selection.getText() + suffix, {select: true})


# Wrap selected text with other text.
atom.commands.add 'atom-text-editor', 'user:wrap-selection-green', -> # Defines a command to work within the TextEditor.
  return unless editor = atom.workspace.getActiveTextEditor() # Get the active editor object and also return immediately if something goes wrong and there's no active text editor.

  selection = editor.getLastSelection() # Get the most recent selection.
  text = selection.getText() # A selection is an object with a bunch of information attached, so we need to get the text from it.
  prefix = '<span style="color:green">'
  suffix = "</span>"

  # insertText() replaces the whole selection. The options argument makes sure that the resulting text is selected.
  selection.insertText(prefix + selection.getText() + suffix, {select: true})

  # Wrap selected text with other text.
  atom.commands.add 'atom-text-editor', 'user:wrap-selection-blue', -> # Defines a command to work within the TextEditor.
    return unless editor = atom.workspace.getActiveTextEditor() # Get the active editor object and also return immediately if something goes wrong and there's no active text editor.

    selection = editor.getLastSelection() # Get the most recent selection.
    text = selection.getText() # A selection is an object with a bunch of information attached, so we need to get the text from it.
    prefix = '<span style="color:blue">'
    suffix = "</span>"

    # insertText() replaces the whole selection. The options argument makes sure that the resulting text is selected.
    selection.insertText(prefix + selection.getText() + suffix, {select: true})
